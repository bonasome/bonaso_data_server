# Generated by Django 5.2.2 on 2025-10-12 04:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0025_alter_indicator_governs_attribute'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='indicator',
            name='subcategories',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='allow_repeat',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='description',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='governs_attribute',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='indicator_type',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='match_subcategories_to',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='prerequisites',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='require_numeric',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='required_attributes',
        ),
        migrations.RemoveField(
            model_name='indicator',
            name='status',
        ),
        migrations.AddField(
            model_name='indicator',
            name='category',
            field=models.CharField(choices=[('assessment', 'Assessment-Based'), ('social', 'Social Media'), ('events', 'Number of Events / Outreach'), ('orgs', 'Organizations Capacitated')], default='assessment', max_length=25),
        ),
        migrations.AddField(
            model_name='indicator',
            name='help_text',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='indicator',
            name='index',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='indicator',
            name='required',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='indicator',
            name='type',
            field=models.CharField(choices=[('boolean', 'Yes/No'), ('single', 'Single Select'), ('multi', 'Mutliselect'), ('text', 'Open Answer'), ('integer', 'Number')], default='boolean', max_length=25, verbose_name='Data Type'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='code',
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='de_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='name',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='de_updated_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Assessment Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessment_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessment_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='indicator',
            name='assessment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='indicators.assessment'),
        ),
        migrations.CreateModel(
            name='LogicGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator', models.CharField(choices=[('AND', 'And'), ('OR', 'Or')], default='AND', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logic_group_created_by', to=settings.AUTH_USER_MODEL)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logic_groups', to='indicators.indicator')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logic_group_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('deprecated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='option_created_by', to=settings.AUTH_USER_MODEL)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indicators.indicator')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='option_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogicCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('assessment', 'Indicator in This Assessment'), ('indicator', 'Any Previous Indicator'), ('respondent', 'Respondent Field')], default='assessment', max_length=20)),
                ('respondent_field', models.CharField(blank=True, help_text='Used if source_type = respondent', max_length=100, null=True)),
                ('operator', models.CharField(choices=[('=', 'Equals'), ('!=', 'Not Equals'), ('>', 'Greater Than'), ('<', 'Less Than'), ('contains', 'Contains'), ('!contains', 'Does Not Contain')], default='=', max_length=10)),
                ('value_text', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_created_by', to=settings.AUTH_USER_MODEL)),
                ('source_indicator', models.ForeignKey(blank=True, help_text='Used if source_type = indicator', null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicators.indicator')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_updated_by', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='indicators.logicgroup')),
                ('value_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='indicators.option')),
            ],
        ),
    ]
